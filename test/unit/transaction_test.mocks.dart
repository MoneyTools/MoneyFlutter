// Mocks generated by Mockito 5.4.6 from annotations
// in money/test/unit/transaction_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i22;
import 'dart:typed_data' as _i24;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i25;
import 'package:money/core/controller/data_controller.dart' as _i23;
import 'package:money/data/models/money_objects/account_aliases/account_aliases.dart'
    as _i2;
import 'package:money/data/models/money_objects/accounts/account.dart' as _i20;
import 'package:money/data/models/money_objects/accounts/account_types_enum.dart'
    as _i26;
import 'package:money/data/models/money_objects/accounts/accounts.dart' as _i3;
import 'package:money/data/models/money_objects/aliases/aliases.dart' as _i4;
import 'package:money/data/models/money_objects/categories/categories.dart'
    as _i5;
import 'package:money/data/models/money_objects/currencies/currencies.dart'
    as _i6;
import 'package:money/data/models/money_objects/events/events.dart' as _i7;
import 'package:money/data/models/money_objects/investments/investments.dart'
    as _i8;
import 'package:money/data/models/money_objects/loan_payments/loan_payments.dart'
    as _i9;
import 'package:money/data/models/money_objects/money_objects.dart' as _i19;
import 'package:money/data/models/money_objects/online_accounts/online_accounts.dart'
    as _i10;
import 'package:money/data/models/money_objects/payees/payees.dart' as _i11;
import 'package:money/data/models/money_objects/rent_buildings/rent_buildings.dart'
    as _i12;
import 'package:money/data/models/money_objects/rental_unit/rental_units.dart'
    as _i13;
import 'package:money/data/models/money_objects/securities/securities.dart'
    as _i14;
import 'package:money/data/models/money_objects/splits/splits.dart' as _i15;
import 'package:money/data/models/money_objects/stock_splits/stock_splits.dart'
    as _i16;
import 'package:money/data/models/money_objects/transaction_extras/transaction_extras.dart'
    as _i17;
import 'package:money/data/models/money_objects/transactions/transactions.dart'
    as _i18;
import 'package:money/data/storage/data/data.dart' as _i21;
import 'package:money/data/storage/database/database.dart' as _i27;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAccountAliases_0 extends _i1.SmartFake
    implements _i2.AccountAliases {
  _FakeAccountAliases_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAccounts_1 extends _i1.SmartFake implements _i3.Accounts {
  _FakeAccounts_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAliases_2 extends _i1.SmartFake implements _i4.Aliases {
  _FakeAliases_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCategories_3 extends _i1.SmartFake implements _i5.Categories {
  _FakeCategories_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCurrencies_4 extends _i1.SmartFake implements _i6.Currencies {
  _FakeCurrencies_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeEvents_5 extends _i1.SmartFake implements _i7.Events {
  _FakeEvents_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInvestments_6 extends _i1.SmartFake implements _i8.Investments {
  _FakeInvestments_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLoanPayments_7 extends _i1.SmartFake implements _i9.LoanPayments {
  _FakeLoanPayments_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOnlineAccounts_8 extends _i1.SmartFake
    implements _i10.OnlineAccounts {
  _FakeOnlineAccounts_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePayees_9 extends _i1.SmartFake implements _i11.Payees {
  _FakePayees_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRentBuildings_10 extends _i1.SmartFake
    implements _i12.RentBuildings {
  _FakeRentBuildings_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRentUnits_11 extends _i1.SmartFake implements _i13.RentUnits {
  _FakeRentUnits_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSecurities_12 extends _i1.SmartFake implements _i14.Securities {
  _FakeSecurities_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSplits_13 extends _i1.SmartFake implements _i15.Splits {
  _FakeSplits_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStockSplits_14 extends _i1.SmartFake implements _i16.StockSplits {
  _FakeStockSplits_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransactionExtras_15 extends _i1.SmartFake
    implements _i17.TransactionExtras {
  _FakeTransactionExtras_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransactions_16 extends _i1.SmartFake implements _i18.Transactions {
  _FakeTransactions_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMoneyModel_17 extends _i1.SmartFake implements _i19.MoneyModel {
  _FakeMoneyModel_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransaction_18 extends _i1.SmartFake implements _i18.Transaction {
  _FakeTransaction_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAccount_19 extends _i1.SmartFake implements _i20.Account {
  _FakeAccount_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMoneyObject_20 extends _i1.SmartFake implements _i19.MoneyObject {
  _FakeMoneyObject_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Data].
///
/// See the documentation for Mockito's code generation for more information.
class MockData extends _i1.Mock implements _i21.Data {
  MockData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i19.MoneyObjects<dynamic>> get tables =>
      (super.noSuchMethod(
            Invocation.getter(#tables),
            returnValue: <_i19.MoneyObjects<dynamic>>[],
          )
          as List<_i19.MoneyObjects<dynamic>>);

  @override
  _i2.AccountAliases get accountAliases =>
      (super.noSuchMethod(
            Invocation.getter(#accountAliases),
            returnValue: _FakeAccountAliases_0(
              this,
              Invocation.getter(#accountAliases),
            ),
          )
          as _i2.AccountAliases);

  @override
  _i3.Accounts get accounts =>
      (super.noSuchMethod(
            Invocation.getter(#accounts),
            returnValue: _FakeAccounts_1(this, Invocation.getter(#accounts)),
          )
          as _i3.Accounts);

  @override
  _i4.Aliases get aliases =>
      (super.noSuchMethod(
            Invocation.getter(#aliases),
            returnValue: _FakeAliases_2(this, Invocation.getter(#aliases)),
          )
          as _i4.Aliases);

  @override
  _i5.Categories get categories =>
      (super.noSuchMethod(
            Invocation.getter(#categories),
            returnValue: _FakeCategories_3(
              this,
              Invocation.getter(#categories),
            ),
          )
          as _i5.Categories);

  @override
  _i6.Currencies get currencies =>
      (super.noSuchMethod(
            Invocation.getter(#currencies),
            returnValue: _FakeCurrencies_4(
              this,
              Invocation.getter(#currencies),
            ),
          )
          as _i6.Currencies);

  @override
  _i7.Events get events =>
      (super.noSuchMethod(
            Invocation.getter(#events),
            returnValue: _FakeEvents_5(this, Invocation.getter(#events)),
          )
          as _i7.Events);

  @override
  _i8.Investments get investments =>
      (super.noSuchMethod(
            Invocation.getter(#investments),
            returnValue: _FakeInvestments_6(
              this,
              Invocation.getter(#investments),
            ),
          )
          as _i8.Investments);

  @override
  _i9.LoanPayments get loanPayments =>
      (super.noSuchMethod(
            Invocation.getter(#loanPayments),
            returnValue: _FakeLoanPayments_7(
              this,
              Invocation.getter(#loanPayments),
            ),
          )
          as _i9.LoanPayments);

  @override
  _i10.OnlineAccounts get onlineAccounts =>
      (super.noSuchMethod(
            Invocation.getter(#onlineAccounts),
            returnValue: _FakeOnlineAccounts_8(
              this,
              Invocation.getter(#onlineAccounts),
            ),
          )
          as _i10.OnlineAccounts);

  @override
  _i11.Payees get payees =>
      (super.noSuchMethod(
            Invocation.getter(#payees),
            returnValue: _FakePayees_9(this, Invocation.getter(#payees)),
          )
          as _i11.Payees);

  @override
  _i12.RentBuildings get rentBuildings =>
      (super.noSuchMethod(
            Invocation.getter(#rentBuildings),
            returnValue: _FakeRentBuildings_10(
              this,
              Invocation.getter(#rentBuildings),
            ),
          )
          as _i12.RentBuildings);

  @override
  _i13.RentUnits get rentUnits =>
      (super.noSuchMethod(
            Invocation.getter(#rentUnits),
            returnValue: _FakeRentUnits_11(this, Invocation.getter(#rentUnits)),
          )
          as _i13.RentUnits);

  @override
  _i14.Securities get securities =>
      (super.noSuchMethod(
            Invocation.getter(#securities),
            returnValue: _FakeSecurities_12(
              this,
              Invocation.getter(#securities),
            ),
          )
          as _i14.Securities);

  @override
  _i15.Splits get splits =>
      (super.noSuchMethod(
            Invocation.getter(#splits),
            returnValue: _FakeSplits_13(this, Invocation.getter(#splits)),
          )
          as _i15.Splits);

  @override
  _i16.StockSplits get stockSplits =>
      (super.noSuchMethod(
            Invocation.getter(#stockSplits),
            returnValue: _FakeStockSplits_14(
              this,
              Invocation.getter(#stockSplits),
            ),
          )
          as _i16.StockSplits);

  @override
  _i17.TransactionExtras get transactionExtras =>
      (super.noSuchMethod(
            Invocation.getter(#transactionExtras),
            returnValue: _FakeTransactionExtras_15(
              this,
              Invocation.getter(#transactionExtras),
            ),
          )
          as _i17.TransactionExtras);

  @override
  _i18.Transactions get transactions =>
      (super.noSuchMethod(
            Invocation.getter(#transactions),
            returnValue: _FakeTransactions_16(
              this,
              Invocation.getter(#transactions),
            ),
          )
          as _i18.Transactions);

  @override
  set tables(List<_i19.MoneyObjects<dynamic>>? _tables) => super.noSuchMethod(
    Invocation.setter(#tables, _tables),
    returnValueForMissingStub: null,
  );

  @override
  set accountAliases(_i2.AccountAliases? _accountAliases) => super.noSuchMethod(
    Invocation.setter(#accountAliases, _accountAliases),
    returnValueForMissingStub: null,
  );

  @override
  set accounts(_i3.Accounts? _accounts) => super.noSuchMethod(
    Invocation.setter(#accounts, _accounts),
    returnValueForMissingStub: null,
  );

  @override
  set aliases(_i4.Aliases? _aliases) => super.noSuchMethod(
    Invocation.setter(#aliases, _aliases),
    returnValueForMissingStub: null,
  );

  @override
  set categories(_i5.Categories? _categories) => super.noSuchMethod(
    Invocation.setter(#categories, _categories),
    returnValueForMissingStub: null,
  );

  @override
  set currencies(_i6.Currencies? _currencies) => super.noSuchMethod(
    Invocation.setter(#currencies, _currencies),
    returnValueForMissingStub: null,
  );

  @override
  set events(_i7.Events? _events) => super.noSuchMethod(
    Invocation.setter(#events, _events),
    returnValueForMissingStub: null,
  );

  @override
  set investments(_i8.Investments? _investments) => super.noSuchMethod(
    Invocation.setter(#investments, _investments),
    returnValueForMissingStub: null,
  );

  @override
  set loanPayments(_i9.LoanPayments? _loanPayments) => super.noSuchMethod(
    Invocation.setter(#loanPayments, _loanPayments),
    returnValueForMissingStub: null,
  );

  @override
  set onlineAccounts(_i10.OnlineAccounts? _onlineAccounts) =>
      super.noSuchMethod(
        Invocation.setter(#onlineAccounts, _onlineAccounts),
        returnValueForMissingStub: null,
      );

  @override
  set payees(_i11.Payees? _payees) => super.noSuchMethod(
    Invocation.setter(#payees, _payees),
    returnValueForMissingStub: null,
  );

  @override
  set rentBuildings(_i12.RentBuildings? _rentBuildings) => super.noSuchMethod(
    Invocation.setter(#rentBuildings, _rentBuildings),
    returnValueForMissingStub: null,
  );

  @override
  set rentUnits(_i13.RentUnits? _rentUnits) => super.noSuchMethod(
    Invocation.setter(#rentUnits, _rentUnits),
    returnValueForMissingStub: null,
  );

  @override
  set securities(_i14.Securities? _securities) => super.noSuchMethod(
    Invocation.setter(#securities, _securities),
    returnValueForMissingStub: null,
  );

  @override
  set splits(_i15.Splits? _splits) => super.noSuchMethod(
    Invocation.setter(#splits, _splits),
    returnValueForMissingStub: null,
  );

  @override
  set stockSplits(_i16.StockSplits? _stockSplits) => super.noSuchMethod(
    Invocation.setter(#stockSplits, _stockSplits),
    returnValueForMissingStub: null,
  );

  @override
  set transactionExtras(_i17.TransactionExtras? _transactionExtras) =>
      super.noSuchMethod(
        Invocation.setter(#transactionExtras, _transactionExtras),
        returnValueForMissingStub: null,
      );

  @override
  set transactions(_i18.Transactions? _transactions) => super.noSuchMethod(
    Invocation.setter(#transactions, _transactions),
    returnValueForMissingStub: null,
  );

  @override
  void checkTransfers() => super.noSuchMethod(
    Invocation.method(#checkTransfers, []),
    returnValueForMissingStub: null,
  );

  @override
  void clear() => super.noSuchMethod(
    Invocation.method(#clear, []),
    returnValueForMissingStub: null,
  );

  @override
  void clearExistingData() => super.noSuchMethod(
    Invocation.method(#clearExistingData, []),
    returnValueForMissingStub: null,
  );

  @override
  void clearTransferToAccount(_i18.Transaction? t, _i20.Account? a) =>
      super.noSuchMethod(
        Invocation.method(#clearTransferToAccount, [t, a]),
        returnValueForMissingStub: null,
      );

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );

  @override
  void deleteItems(List<_i19.MoneyObject>? itemsToDelete) => super.noSuchMethod(
    Invocation.method(#deleteItems, [itemsToDelete]),
    returnValueForMissingStub: null,
  );

  @override
  Set<_i18.Transaction> getDanglingTransfers() =>
      (super.noSuchMethod(
            Invocation.method(#getDanglingTransfers, []),
            returnValue: <_i18.Transaction>{},
          )
          as Set<_i18.Transaction>);

  @override
  DateTime? getLastDateTimeModified(String? fullPathToFile) =>
      (super.noSuchMethod(
            Invocation.method(#getLastDateTimeModified, [fullPathToFile]),
          )
          as DateTime?);

  @override
  List<_i19.MoneyObject> getMutatedInstances(
    _i19.MutationType? typeOfMutation,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMutatedInstances, [typeOfMutation]),
            returnValue: <_i19.MoneyObject>[],
          )
          as List<_i19.MoneyObject>);

  @override
  List<_i19.MutationGroup> getMutationGroups(
    _i19.MutationType? typeOfMutation,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMutationGroups, [typeOfMutation]),
            returnValue: <_i19.MutationGroup>[],
          )
          as List<_i19.MutationGroup>);

  @override
  _i19.MoneyModel getNetWorth() =>
      (super.noSuchMethod(
            Invocation.method(#getNetWorth, []),
            returnValue: _FakeMoneyModel_17(
              this,
              Invocation.method(#getNetWorth, []),
            ),
          )
          as _i19.MoneyModel);

  @override
  _i18.Transaction? getOrCreateRelatedTransaction({
    required _i18.Transaction? transactionSource,
    required _i20.Account? destinationAccount,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getOrCreateRelatedTransaction, [], {
              #transactionSource: transactionSource,
              #destinationAccount: destinationAccount,
            }),
          )
          as _i18.Transaction?);

  @override
  _i22.Future<bool> loadFromPath(_i23.DataSource? dateSource) =>
      (super.noSuchMethod(
            Invocation.method(#loadFromPath, [dateSource]),
            returnValue: _i22.Future<bool>.value(false),
          )
          as _i22.Future<bool>);

  @override
  void verifyApplyTransfer({
    required _i18.Transaction? transaction,
    required _i20.Account? relatedAccount,
  }) => super.noSuchMethod(
    Invocation.method(#verifyApplyTransfer, [], {
      #transaction: transaction,
      #relatedAccount: relatedAccount,
    }),
    returnValueForMissingStub: null,
  );

  @override
  _i18.Transaction makeTransferLinkage({
    required _i18.Transaction? transactionSource,
    required _i20.Account? destinationAccount,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#makeTransferLinkage, [], {
              #transactionSource: transactionSource,
              #destinationAccount: destinationAccount,
            }),
            returnValue: _FakeTransaction_18(
              this,
              Invocation.method(#makeTransferLinkage, [], {
                #transactionSource: transactionSource,
                #destinationAccount: destinationAccount,
              }),
            ),
          )
          as _i18.Transaction);

  @override
  void notifyMutationChanged({
    required _i19.MutationType? mutation,
    required _i19.MoneyObject? moneyObject,
    bool? recalculateBalances = true,
  }) => super.noSuchMethod(
    Invocation.method(#notifyMutationChanged, [], {
      #mutation: mutation,
      #moneyObject: moneyObject,
      #recalculateBalances: recalculateBalances,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void recalculateBalances() => super.noSuchMethod(
    Invocation.method(#recalculateBalances, []),
    returnValueForMissingStub: null,
  );

  @override
  bool removeTransaction(_i18.Transaction? t) =>
      (super.noSuchMethod(
            Invocation.method(#removeTransaction, [t]),
            returnValue: false,
          )
          as bool);

  @override
  void transferSplitTo(_i15.MoneySplit? s, _i20.Account? to) =>
      super.noSuchMethod(
        Invocation.method(#transferSplitTo, [s, to]),
        returnValueForMissingStub: null,
      );

  @override
  void updateAll() => super.noSuchMethod(
    Invocation.method(#updateAll, []),
    returnValueForMissingStub: null,
  );

  @override
  _i22.Future<String?> validateDataBasePathIsValidAndExist(
    String? filePath,
    _i24.Uint8List? fileBytes,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#validateDataBasePathIsValidAndExist, [
              filePath,
              fileBytes,
            ]),
            returnValue: _i22.Future<String?>.value(),
          )
          as _i22.Future<String?>);
}

/// A class which mocks [Accounts].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccounts extends _i1.Mock implements _i3.Accounts {
  MockAccounts() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get collectionName =>
      (super.noSuchMethod(
            Invocation.getter(#collectionName),
            returnValue: _i25.dummyValue<String>(
              this,
              Invocation.getter(#collectionName),
            ),
          )
          as String);

  @override
  bool get isEmpty =>
      (super.noSuchMethod(Invocation.getter(#isEmpty), returnValue: false)
          as bool);

  @override
  bool get isNotEmpty =>
      (super.noSuchMethod(Invocation.getter(#isNotEmpty), returnValue: false)
          as bool);

  @override
  int get length =>
      (super.noSuchMethod(Invocation.getter(#length), returnValue: 0) as int);

  @override
  set collectionName(String? _collectionName) => super.noSuchMethod(
    Invocation.setter(#collectionName, _collectionName),
    returnValueForMissingStub: null,
  );

  @override
  _i20.Account instanceFromJson(Map<String, dynamic>? json) =>
      (super.noSuchMethod(
            Invocation.method(#instanceFromJson, [json]),
            returnValue: _FakeAccount_19(
              this,
              Invocation.method(#instanceFromJson, [json]),
            ),
          )
          as _i20.Account);

  @override
  void onAllDataLoaded() => super.noSuchMethod(
    Invocation.method(#onAllDataLoaded, []),
    returnValueForMissingStub: null,
  );

  @override
  String toCSV() =>
      (super.noSuchMethod(
            Invocation.method(#toCSV, []),
            returnValue: _i25.dummyValue<String>(
              this,
              Invocation.method(#toCSV, []),
            ),
          )
          as String);

  @override
  List<_i20.Account> activeAccount(
    List<_i26.AccountType>? types, {
    bool? isActive = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#activeAccount, [types], {#isActive: isActive}),
            returnValue: <_i20.Account>[],
          )
          as List<_i20.Account>);

  @override
  bool activeBankAccount(_i20.Account? account) =>
      (super.noSuchMethod(
            Invocation.method(#activeBankAccount, [account]),
            returnValue: false,
          )
          as bool);

  @override
  _i20.Account addNewAccount(String? accountName) =>
      (super.noSuchMethod(
            Invocation.method(#addNewAccount, [accountName]),
            returnValue: _FakeAccount_19(
              this,
              Invocation.method(#addNewAccount, [accountName]),
            ),
          )
          as _i20.Account);

  @override
  bool compareDoubles(double? a, double? b, int? precision) =>
      (super.noSuchMethod(
            Invocation.method(#compareDoubles, [a, b, precision]),
            returnValue: false,
          )
          as bool);

  @override
  _i18.Transaction? findBackwardInTimeForTransactionBalanceThatMatchThisAmount(
    List<_i18.Transaction>? transactionForAccountSortedByDateAscending,
    int? indexStartingFrom,
    DateTime? validDateInThePast,
    double? amountToMatch,
  ) =>
      (super.noSuchMethod(
            Invocation.method(
              #findBackwardInTimeForTransactionBalanceThatMatchThisAmount,
              [
                transactionForAccountSortedByDateAscending,
                indexStartingFrom,
                validDateInThePast,
                amountToMatch,
              ],
            ),
          )
          as _i18.Transaction?);

  @override
  _i20.Account? findByIdAndType(
    String? accountId,
    _i26.AccountType? accountType,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#findByIdAndType, [accountId, accountType]),
          )
          as _i20.Account?);

  @override
  _i20.Account? getByName(String? name) =>
      (super.noSuchMethod(Invocation.method(#getByName, [name]))
          as _i20.Account?);

  @override
  List<_i20.Account> getListSorted() =>
      (super.noSuchMethod(
            Invocation.method(#getListSorted, []),
            returnValue: <_i20.Account>[],
          )
          as List<_i20.Account>);

  @override
  _i20.Account getMostRecentlySelectedAccount() =>
      (super.noSuchMethod(
            Invocation.method(#getMostRecentlySelectedAccount, []),
            returnValue: _FakeAccount_19(
              this,
              Invocation.method(#getMostRecentlySelectedAccount, []),
            ),
          )
          as _i20.Account);

  @override
  String getNameFromId(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getNameFromId, [id]),
            returnValue: _i25.dummyValue<String>(
              this,
              Invocation.method(#getNameFromId, [id]),
            ),
          )
          as String);

  @override
  List<_i20.Account> getOpenAccounts() =>
      (super.noSuchMethod(
            Invocation.method(#getOpenAccounts, []),
            returnValue: <_i20.Account>[],
          )
          as List<_i20.Account>);

  @override
  List<_i20.Account> getOpenRealAccounts() =>
      (super.noSuchMethod(
            Invocation.method(#getOpenRealAccounts, []),
            returnValue: <_i20.Account>[],
          )
          as List<_i20.Account>);

  @override
  double getSumOfAccountBalances() =>
      (super.noSuchMethod(
            Invocation.method(#getSumOfAccountBalances, []),
            returnValue: 0.0,
          )
          as double);

  @override
  Iterable<_i18.Transaction> getTransactions(_i20.Account? account) =>
      (super.noSuchMethod(
            Invocation.method(#getTransactions, [account]),
            returnValue: <_i18.Transaction>[],
          )
          as Iterable<_i18.Transaction>);

  @override
  String getViewPreferenceIdAccountLastSelected() =>
      (super.noSuchMethod(
            Invocation.method(#getViewPreferenceIdAccountLastSelected, []),
            returnValue: _i25.dummyValue<String>(
              this,
              Invocation.method(#getViewPreferenceIdAccountLastSelected, []),
            ),
          )
          as String);

  @override
  bool removeAccount(_i20.Account? a, [bool? forceRemoveAfterSave = false]) =>
      (super.noSuchMethod(
            Invocation.method(#removeAccount, [a, forceRemoveAfterSave]),
            returnValue: false,
          )
          as bool);

  @override
  void setMostRecentUsedAccount(_i20.Account? account) => super.noSuchMethod(
    Invocation.method(#setMostRecentUsedAccount, [account]),
    returnValueForMissingStub: null,
  );

  @override
  void appendMoneyObject(_i19.MoneyObject? moneyObject) => super.noSuchMethod(
    Invocation.method(#appendMoneyObject, [moneyObject]),
    returnValueForMissingStub: null,
  );

  @override
  _i19.MoneyObject appendNewMoneyObject(
    _i19.MoneyObject? moneyObject, {
    bool? fireNotification = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #appendNewMoneyObject,
              [moneyObject],
              {#fireNotification: fireNotification},
            ),
            returnValue: _FakeMoneyObject_20(
              this,
              Invocation.method(
                #appendNewMoneyObject,
                [moneyObject],
                {#fireNotification: fireNotification},
              ),
            ),
          )
          as _i19.MoneyObject);

  @override
  void clear() => super.noSuchMethod(
    Invocation.method(#clear, []),
    returnValueForMissingStub: null,
  );

  @override
  bool containsKey(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [id]),
            returnValue: false,
          )
          as bool);

  @override
  void deleteItem(_i19.MoneyObject? itemToDelete) => super.noSuchMethod(
    Invocation.method(#deleteItem, [itemToDelete]),
    returnValueForMissingStub: null,
  );

  @override
  _i20.Account? firstItem([bool? includeDeleted = false]) =>
      (super.noSuchMethod(Invocation.method(#firstItem, [includeDeleted]))
          as _i20.Account?);

  @override
  _i20.Account? get(int? id) =>
      (super.noSuchMethod(Invocation.method(#get, [id])) as _i20.Account?);

  @override
  List<_i19.MoneyObject> getListSortedById() =>
      (super.noSuchMethod(
            Invocation.method(#getListSortedById, []),
            returnValue: <_i19.MoneyObject>[],
          )
          as List<_i19.MoneyObject>);

  @override
  List<_i19.MoneyObject> getMutatedObjects(_i19.MutationType? typeOfMutation) =>
      (super.noSuchMethod(
            Invocation.method(#getMutatedObjects, [typeOfMutation]),
            returnValue: <_i19.MoneyObject>[],
          )
          as List<_i19.MoneyObject>);

  @override
  int getNextId() =>
      (super.noSuchMethod(Invocation.method(#getNextId, []), returnValue: 0)
          as int);

  @override
  Iterable<_i20.Account> iterableList({bool? includeDeleted = false}) =>
      (super.noSuchMethod(
            Invocation.method(#iterableList, [], {
              #includeDeleted: includeDeleted,
            }),
            returnValue: <_i20.Account>[],
          )
          as Iterable<_i20.Account>);

  @override
  void loadFromJson(List<Map<String, dynamic>>? rows) => super.noSuchMethod(
    Invocation.method(#loadFromJson, [rows]),
    returnValueForMissingStub: null,
  );

  @override
  void mutationUpdateItem(_i19.MoneyObject? item) => super.noSuchMethod(
    Invocation.method(#mutationUpdateItem, [item]),
    returnValueForMissingStub: null,
  );

  @override
  bool saveSql(_i27.MyDatabase? db, String? tableName) =>
      (super.noSuchMethod(
            Invocation.method(#saveSql, [db, tableName]),
            returnValue: false,
          )
          as bool);

  @override
  List<_i19.Widget> whatWasMutated(List<_i19.MoneyObject>? objects) =>
      (super.noSuchMethod(
            Invocation.method(#whatWasMutated, [objects]),
            returnValue: <_i19.Widget>[],
          )
          as List<_i19.Widget>);
}
